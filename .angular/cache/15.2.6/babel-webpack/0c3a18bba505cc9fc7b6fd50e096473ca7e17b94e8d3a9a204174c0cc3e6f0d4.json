{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ResetpassService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseUrl = 'http://localhost:8082/reset_password';\n  }\n  resetPassword(token, newPassword) {\n    // Construct HttpParams\n    console.log(\"this is token \" + token + \"\");\n    let params = new HttpParams().set('token', token).set('password', newPassword);\n    return this.httpClient.post(this.baseUrl, null, {\n      params: params\n    });\n  }\n}\nResetpassService.ɵfac = function ResetpassService_Factory(t) {\n  return new (t || ResetpassService)(i0.ɵɵinject(i1.HttpClient));\n};\nResetpassService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ResetpassService,\n  factory: ResetpassService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,UAAU,QAAQ,sBAAsB;;;AAO7D,OAAM,MAAOC,gBAAgB;EAG3BC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAFtB,YAAO,GAAG,sCAAsC;EAEV;EAE9CC,aAAa,CAACC,KAAa,EAAEC,WAAmB;IAC9C;IAEJC,OAAO,CAACC,GAAG,CAAC,gBAAgB,GAAEH,KAAK,GAAG,EAAE,CAAE;IAEtC,IAAII,MAAM,GAAG,IAAIT,UAAU,EAAE,CAC1BU,GAAG,CAAC,OAAO,EAAEL,KAAK,CAAC,CACnBK,GAAG,CAAC,UAAU,EAAEJ,WAAW,CAAC;IAE/B,OAAO,IAAI,CAACH,UAAU,CAACQ,IAAI,CAAM,IAAI,CAACC,OAAO,EAAE,IAAI,EAAE;MAAEH,MAAM,EAAEA;IAAM,CAAE,CAAC;EAC1E;;AAfWR,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAY,SAAhBZ,gBAAgB;EAAAa,YAFf;AAAM","names":["HttpParams","ResetpassService","constructor","httpClient","resetPassword","token","newPassword","console","log","params","set","post","baseUrl","factory","providedIn"],"sourceRoot":"","sources":["D:\\projects\\pi\\connectingMinds\\angular-front-user\\src\\app\\service\\resetpass-svc\\resetpass.service.ts"],"sourcesContent":["import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResetpassService {\n  private baseUrl = 'http://localhost:8082/reset_password';\n\n  constructor(private httpClient: HttpClient) { }\n\n  resetPassword(token: string, newPassword: string): Observable<any> {\n    // Construct HttpParams\n\nconsole.log(\"this is token \"+ token + \"\" )\n\n    let params = new HttpParams()\n      .set('token', token)\n      .set('password', newPassword);\n\n    return this.httpClient.post<any>(this.baseUrl, null, { params: params });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}